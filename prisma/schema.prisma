// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Board {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  orgId         String
  title         String
  imageId       String
  imageThumbUrl String @db.String
  imageFullUrl  String @db.String
  imageUserName String @db.String
  imageLinkHTML String @db.String

  lists List[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model List {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  order Int

  boardId String @db.ObjectId
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  cards Card[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([boardId])
}

model Card {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  order       Int
  description String?

  listId String @db.ObjectId
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@index([listId])
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  orgId       String
  action      ACTION
  entityType  ENTITY_TYPE
  entityTitle String
  entityId    String
  userId      String
  userImage   String      @db.String
  userName    String      @db.String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrgLimit {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  orgId String @unique
  count Int    @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model OrgSubscription {
  id                      String @id @default(auto()) @map("_id") @db.ObjectId
  orgId                   String @unique
  stripeCustomerId        String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId    String? @unique @map(name: "stripe_subscription_id")
  stripePriceId           String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd  DateTime? @map(name: "stripe_current_period_end")
}